//DO NOT EDIT THIS FILE
/*** **** **** **** **** **** **** **** **** **** **** **** **** **** **** ****-**** **** **** **** **** **** **** **** **** **** **** **** **** **** **** ****-
*                                                                            
*	Source title:		MaximLib_DMM.h                                                                           		  
*	URL:				$URL: https://svn.maxim-ic.com/svn/ets/test_programs/AP89/AP89_FT/Trunk/MaximLib/MaximLib_DMM.h $
*	Last Modified by:	$LastChangedBy: govit.pimthong $                                       
*	Date:				$Date: 2017-03-09 12:55:55 +0700 (Thu, 09 Mar 2017) $                                                
*	Current Rev:		$Revision: 61735 $
*                                                                            
*	Description:
*		Maxim library file for digital multi-meter (external Agilent 34401A Meter) functions
*		Maxim library maintained by:
*			Mark Bruening (Mark.Bruening@MaximIntegrated.com)    
*			Patrick Hayes (Patrick.Hayes@MaximIntegrated.com)	                                                                                         
*
*	Revision History  
*		October 2011: Original DMM library written by Teradyne.
*		20111115: MWB modified for use by Maxim.  Integrated into ETS-88-Template and MaximLib.
*                                                                            
**** **** **** **** **** **** **** **** **** **** **** **** **** **** **** ****-**** **** **** **** **** **** **** **** **** **** **** **** **** **** **** ****/
//DO NOT EDIT THIS FILE

/**********************************************************************************************************************************************For*Doxygen**//**
@file	MaximLib_DMM.h
@brief	Maxim library file for digital multi-meter (external Agilent 34401A Meter) functions
**************************************************************************************************************************************************************/
/************************************************************************************************************************************************************For*Doxygen**//**
@page quickStartMeter Meter Quick Start
@details 

@tableofcontents

@section overviewSection Overview
The Maxim ETS-88 Meter library contains code required to return measurements from the Agilent 34401A Meter connected to each sector of the [Eagle ETS-88 Tester](https://confluence.maxim-ic.com/display/ETS88/ETS-88+Tester+Resource+Page).

@section usingLibrarySection Using the Library

[Maxim ETS-88 Template]: https://confluence.maxim-ic.com/display/ETS88/ETS-88+Template

@subsection measureSubsection Measure
- The meter is setup with a @ref defaultMeterConfigurationSection "default configuration" in the [Maxim ETS-88 Template]. 
	- No additional meter configuration is required before using the Meas() function.
- Use the following code to return a measurement from the meter.
@code
  double dMeter;
  dMeter = Maxim::Meter::Meas();   //Return the measurement from the Agilent Meter.
@endcode

@subsection configuringTheMeterSubsection Configuring the Meter
@subsubsection defaultMeterConfigurationSection Default Meter Configuration
- The [Maxim ETS-88 Template] by default sets up the meter to measure DC voltage over 1 power line cycle on 10V Range with 10Gig input impedance. AutoZero is turned on.
- This is done in the Maxim::Meter::DMM::Init_And_Config_Maxim_Standard function called in the UserInit function.
	- Do not edit the configuration in the Maxim Library or edit the call in the UserInit function.  See @ref customMeterConfigurationSection below instead.

@subsubsection customMeterConfigurationSection Custom Meter Configuration
- If the default configuration is not desired, override it by placing the following code in the ::Maxim_UserInit function (in the program's @ref ETS_88_Template.cpp file).
@code
  if (!Maxim::Meter::DMM::Config(DMM_DCV, DMM_RANGE_10V, DMM_RES_1PLC, DMM_APE_NA, DMM_FILT_NA, DMM_INPUT_10G, DMM_TRIG_INT))  //Modify these parameters as desired.
  {
    etsMessageBox("External meter failed configuration.  Check the config settings.",MB_OK|MB_ICONSTOP, 941);
    return FALSE;    //Could not configure the meter, halt loading 
  }
@endcode
- Do not disable the Template's built in meter configuration calls. These call must take place after the default configuration is complete.  
	- The initial calls setup the GPIB address and initialize the meter.

@subsection advancedMeterFunctions Advanced Meter Functions
- Advanced meter setup functions are available under the Maxim::Meter::DMM namespace.
- Please use caution if calling these functions.
- Please make sure to read an understand the @ref meterSpecificationSection before calling these functions 

@subsection gpibSetupSection GPIB Setup
- Meters must be set to GPIB communication mode with the following addresses.
	- Agilent 34401A Side A: Address 22
	- Agilent 34401A Side B: Address 23
-Uncomment "#define MAXIM_VERBOSE" at the top of the @ref ETS_88_Template.h to print the "Sector 1A" or "Sector 1B" to the meter's LCD for three seconds when the program is loaded.
	- This is helpful when setting up the meter for the first time on the system.


@subsubsection disableMeterSection Disable the Meter
- The [Maxim ETS-88 Template] is setup to initialize the meter for all test programs.  There is no harm in initializing the meter, even for programs that do not plan to use the meter.
- For special projects, or systems that temporarily do not have a meter, the following can be used to disable the meter initialization.
	- In the ::Maxim_UserInit function in the @ref ETS_88_Template.cpp file ("[Die Type].cpp"), the 3rd parameter ("bInitMeter") in function Maxim::Exec::Lib_UserInit() controls if the meter is initialized or not
	- To disable the meter, set the 3rd parameter in the line below to false.
@code if (!Maxim::Exec::Lib_UserInit(NUM_SITES, true, false, GPSW_REAL_TIME_DATALOG)) return FALSE; @endcode

@subsubsection enableMeterSection Enable the Meter
- To enable the meter, set the 3rd parameter in the line below to true.  This is the default setting.
@code if (!Maxim::Exec::Lib_UserInit(NUM_SITES, true, true, GPSW_REAL_TIME_DATALOG)) return FALSE;  @endcode

@section meterSpecificationSection Meter Specifications
- [Agilent 34401A Meter User's Guide](https://svn.maxim-ic.com/svn/ets/library_system/Specifications/Trunk/Agilent_34401A_Users_Guide.pdf).  Full user's manual.
@subsection measurementErrorSection Measurement Error
- [Agilent 34401A Meter Product Overview](https://svn.maxim-ic.com/svn/ets/library_system/Specifications/Trunk/Agilent_34401A_Product_Overview.pdf).  Page 2 of this document has a quick accuracy reference chart.
	- [How do I calculate total measurement error on the Agilent 34401A?](http://www.home.agilent.com/agilent/editorial.jspx?cc=US&lc=eng&ckey=1000001263:epsg:faq&nid=-536902435.536880933&id=1000001263:epsg:faq)
@subsection measurementTimeSection Measurement Time
- The time required for the meter to make a measurement depends on the [[ETS-88_Libraries:Meter#Configuring_the_Meter|configuration]]. 
- The table below shows approximate measurement time (excluding communication overhead) for various meter integration times.
	- This table assumes AutoZero is off.  Default configuration enables AutoZero.
	- AutoZero doubles the below measurement times.

NPLCs<sup>1</sup>  | Digits <sup>2</sup>    | Error at 60Hz <sup>3</sup> | Error at 50Hz <sup>3</sup> | Additional Error <sup>4</sup>
----- | ---------- | ----------- | ----------- | ------------------------------------------
0.02  | 4 1/2 Fast | 400us       | 400us       | 0.01% of range + 20 uV or 4 uA or 20 mOhms
0.2   | 5 Fast     | 3.3ms       | 4ms         | 0.001% of range + 20 uV or 4 uA or 20 mOhms
1     | 4 1/2 Slow | 16.7ms      | 20ms        | 0.001% of range
10    | 5 1/2 Slow | 167ms       | 200ms       | no additional error
10    | 6 1/2 Fast | 167ms       | 200ms       | no additional error
100   | 6 1/2 Slow | 1.67s       | 2s          | no additional error

- Table is from page 200 and 216 of the User's Manual.
- <sup>1</sup> Number of Power Line Cycles (NPLC) is set by the meter configuration.  See \ref configuringTheMeterSubsection.  
	- The meter will integrate (average) the measurement for the specified time (expressed in power line cycles).
	- Higher NPLC settings will increase the measurement resolution and increase noise rejection at the cost of measurement time.
	- Averaging over a whole number of power line cycles will help filter out power line noise.
- <sup>2</sup> Meter Resolution (Digits).  Determined by the NPLC setting.
- <sup>3</sup> Measurement time with AutoZero Turned off. 
	- With AutoZero off, Add an additional error of 0.0002% of range + 5 uV or 1 uA or 1 mOhm within 1 degree C and 10 minutes of calibration. 
		[See here](http://www.home.agilent.com/agilent/editorial.jspx?cc=US&lc=eng&ckey=1000001263:epsg:faq&nid=-536902435.536880933&id=1000001263:epsg:faq).
	- With AutoZero on, double the measurement time.
	- Measurement time does not include GPIB communication time or system delays.
	- The meter automatically detects the power line frequency on power up. 
	- Measurement time will vary by location.

Location    | [Power Line Frequency](http://en.wikipedia.org/wiki/Mains_electricity_by_country#Table_of_mains_voltages_and_frequencies)
----------- | --------------------
USA         | 60Hz
Philippines | 60Hz
Thailand    | 50Hz
Europe      | 50Hz

- <sup>4</sup> Additional Error due to NPLC setting only.  See the meter manual for additional error sources.
- If the Meter display is on, measurement times will increase.  The Template Default disables the meter display.
**************************************************************************************************************************************************************/


#ifndef MAXIMLIB_DMM_H
#define MAXIMLIB_DMM_H

//#define  GPIB_SEND_FAILED -1		//gpibsend returns -1 on failure (or at least the help document says it does)
#define  GPIB_SEND_FAILED 940		//gpibsend really returns error code 940 on failure ("GPIB printf failure").  Seems to return 0 on success.
#define  GPIB_RECEIVE_FAILED 0		//gpibreceive returns 0 on failure.  Returns number of characters on success.

//DMM Defines and Enumerated Types
typedef enum{DMM_DCV, DMM_DCI, DMM_ACV, DMM_ACI, DMM_RES2W, DMM_RES4W, DMM_FREQ}							DMM_MEASTYPE;
typedef enum{DMM_RANGE_AUTO, DMM_RANGE_100MV, DMM_RANGE_1V, DMM_RANGE_10V, 	DMM_RANGE_100V, DMM_RANGE_1KV,
			DMM_RANGE_10MA, DMM_RANGE_100MA, DMM_RANGE_1A, DMM_RANGE_3A,
			DMM_RANGE_100, DMM_RANGE_1K,DMM_RANGE_100K, DMM_RANGE_1M, DMM_RANGE_10M, DMM_RANGE_100M,
			DMM_RANGE_FREQ_ALL}																				DMM_RANGETYPE;	//All frequency measurements are taken on the same range.  See Aperture settings for frequency accuracy.
typedef enum{DMM_RES_AUTO, DMM_RES_20MPLC, DMM_RES_200MPLC, DMM_RES_1PLC, 
			DMM_RES_10PLC, DMM_RES_100PLC, DMM_RES_AC_ALL, DMM_RES_FREQ_ALL}								DMM_RESOLUTIONTYPE; //ADC integration time for DCV and R measurements, in PowerLineCycles (60Hz US, 50Hz Asia)
typedef enum{DMM_APE_NA, DMM_APE_10MS, DMM_APE_100MS, DMM_APE_1S}											DMM_APERTURETYPE; //Aperture time for ACV,ACI and Freq measurements, in Seconds.
typedef enum{DMM_FILT_NA, DMM_FILT_SLOW, DMM_FILT_MED, DMM_FILT_FAST}										DMM_ACFILTERTYPE; //High pass filter for ACV,ACI and Freq measurements, 3Hz/20Hz/200Hz.  Filter settling time is 7/1/0.1 seconds.  Upper limit of meter is 300kHz with any setting.
typedef enum{DMM_INPUT_NA, DMM_INPUT_10M, DMM_INPUT_10G}													DMM_INPUTIMPEDANCETYPE; //Applies to DCV measurements only.  10G impedance applies to 100mV, 1V and 10V range only.  Default is 10M.
typedef enum{DMM_TRIG_NA, DMM_TRIG_INT, DMM_TRIG_EXT}														DMM_TRIGGERTYPE; //Meter can be triggered internally or externally.  External trigger format is negative-going TTL.
typedef enum{DMM_DISP_ON, DMM_DISP_OFF, DMM_DISP_CLEAR}														DMM_DISPLAYTYPE; //Controls front panel display.
typedef enum{DMM_CONN_FRONT, DMM_CONN_REAR}																	DMM_TERMINALTYPE; //Front or rear terminal activation can be checked but not controlled over GPIB.

namespace Maxim
{
	/*********************************************************************************************************************************************For*Doxygen**//**
	@brief Contains items related to Meter measurements.
	**************************************************************************************************************************************************************/
	namespace Meter
	{		
		//Measure functions 
		double Meas(void);
		double Meas_Avg(int numsamp);

	/*********************************************************************************************************************************************For*Doxygen**//**
	@brief Contains items related to digital multimeter (DMM) measurements.
	**************************************************************************************************************************************************************/
		namespace DMM
		{	
			//DMM configuration functions
			bool Config(DMM_MEASTYPE DMM_MEAS, DMM_RANGETYPE DMM_RANGE, DMM_RESOLUTIONTYPE DMM_RESOLUTION,	
				DMM_APERTURETYPE DMM_APERTURE=DMM_APE_NA,
				DMM_ACFILTERTYPE DMM_ACFILTER=DMM_FILT_NA,
				DMM_INPUTIMPEDANCETYPE DMM_INPUTIMPEDANCE=DMM_INPUT_NA, 
				DMM_TRIGGERTYPE DMM_TRIGGER=DMM_TRIG_NA);
			bool TriggerSet(DMM_TRIGGERTYPE);
			bool Init(void);
			bool Autozero(bool bEnabled = true);
			DMM_TERMINALTYPE TerminalCheck(void);

			//Returns true if there is an error
			bool bHasError(bool bDisplayMsgBox = true);	

			//Returns the error string from the meter.  Returns empty string if there is no error.
			std::string sGetError(bool bDisplayMsgBox = true);	

			void Display(DMM_DISPLAYTYPE DMM_DISPLAY);
			void printf(const char *str);

			bool GetGPIBAddress();	//Returns the GPIB address of the meter connected to this sector.  Called in Init
			bool Init_And_Config_Maxim_Standard();

		}
	}
}
//End DMM Defines and Enumerated Types



#endif