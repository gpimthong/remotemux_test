//DO NOT EDIT THIS FILE
/*** **** **** **** **** **** **** **** **** **** **** **** **** **** **** ****-**** **** **** **** **** **** **** **** **** **** **** **** **** **** **** ****-
*                                                                            
*	Source title:		Maximlib_APU.h                                                                           		  
*	URL:				$URL: https://svn.maxim-ic.com/svn/ets/test_programs/AP89/AP89_FT/Trunk/MaximLib/MaximLib_APU.h $
*   Last Modified by:	$LastChangedBy: govit.pimthong $                                       
*	Date:				$Date: 2017-03-09 12:55:55 +0700 (Thu, 09 Mar 2017) $                                                
*   Current Rev:		$Revision: 61735 $
*                                                                            
*	Description:
*		Maxim library header file for APU
*		Maxim library written and maintained by:								 
*			Brad Sitton   (Brad.Sitton@MaximIntegrated.com)	                 
*			Patrick Hayes (Patrick.Hayes@MaximIntegrated.com)	                 
*			Mark Bruening (Mark.Bruening@MaximIntegrated.com)                                                                            
*
*   Revision History                                                    
*                                                                            
**** **** **** **** **** **** **** **** **** **** **** **** **** **** **** ****-**** **** **** **** **** **** **** **** **** **** **** **** **** **** **** ****/
//DO NOT EDIT THIS FILE

/**********************************************************************************************************************************************For*Doxygen**//**
@file	Maximlib_APU.h
@brief	Maxim library file for APU
**************************************************************************************************************************************************************/

/**********************************************************************************************************************************************For*Doxygen**//**
@page	sharingAPU	Sharing APU

Some situations require sharing APU channels with more than one site. 

@attention New method is  found at: @ref sharingInstruments

- If possible, it is recommended to try to share an APU channel among pins within the site.  The APU channel can be muxed around within a site by relays.  This will allow the APU to be declared dedicated to a site in the Pin Map and allow for easier coding.  However if that is not possible or desired, see below.
- The MaximLib has the Maxim::Connect_APU_Pin_To_Site function to enable sharing APU channels to different sites.

The following steps will show how to share two APU channels among four sites to make a measurement.

-# Setup the APU __pins__ on the Pin Map Editor to be "No Site"
@image html https://confluence.maxim-ic.com/download/attachments/25103564/ETS_88_Pin_Map_APU_No_Site_4_Sites.jpg
-# Setup the a __group__ of the APU "No Site" channels on the Pin Map Editor.
@image html https://confluence.maxim-ic.com/download/attachments/25103564/ETS_88_Pin_Map_APU_No_Site_Group.jpg
-# Example code
@code
	//Share two APUs among four sites
	int iSite;
	PinListData pldMeas;    //Declare a new PLD to record the measurements
	for (iSite = 0; iSite <= 1; iSite++)    //Loop only twice, since each iteration covers two sites.
	{
		//iSite = 0 means even sites (0 and 2).  iSite = 1 means odd sites (1 and 3)
		//Assume the relays below are setup to connect the proper APU's to the proper sites.
		//electrically connect the shared APU's to the correct site
		if (iSite == 0)
		{
			cbitclose(K200);  
			cbitclose(K201);
		}
		else
		{
			cbitopen(K200);
			cbitopen(K201);
		}

		//Tell the Datalog and Measure functions that the APU channels are now connected to the sites.
		Maxim::Connect_APU_Pin_To_Site(APU_Share_1_3, iSite);
		Maxim::Connect_APU_Pin_To_Site(APU_Share_2_4, iSite + 2);

		//Setup the APUs
		apu12set( APU_Share_Group, APU12_FV, 2.0 V_f, APU12_3p6V, APU12_1MA, APU12_PIN_TO_VI );
		lwait(100 us_f);

		//Make the measurement and combine the results with results from previously measured sites.
		//NOTE: for now, this must be done with each APU, instead of with the group of APUs.  This is due to the way GMEs are currently handled in the MaximLib.
		pldMeas = pldMeas & apu12mi( APU_Share_1_3, 1, 4 , 13.0 );  // Average over 19KHz PLC
		pldMeas = pldMeas & apu12mi( APU_Share_2_4, 1, 4 , 13.0 );  // Average over 19KHz PLC

		//power down the APUs for the next loop.
		apu12set( APU_Share_Group, APU12_FV, 0.0 V_f, APU12_3p6V, APU12_1MA, APU12_PIN_TO_VI );
	}
	// Log the results
	Maxim::DatalogAll(DSIndex, pldMeas);        // log all sites

	//Disconnect all APUs from the sites
	Maxim::Connect_APU_Pin_To_Site(APU_Share_1_3, NO_SITE);
	Maxim::Connect_APU_Pin_To_Site(APU_Share_2_4, NO_SITE);
@endcode
**************************************************************************************************************************************************************/

#ifndef MAXIMLIB_APU_H
#define MAXIMLIB_APU_H

	// APU-12
	//Measure functions that return PinListData
//	PinListData Maximapu12mv( int iPinGroup, int numsamples, double sampledelay, vector<int> viSiteList = vector<int>(1,MS_ALL) );
	PinListData Maximapu12mv( int iPinGroup, int numsamples=4, double sampledelay=13.2 );

	PinListData Maximapu12mi( int iPinGroup, int imeasgain, int numsamples=4, double sampledelay=13.2 );
	PinListData Maximapu12getwhereat( int iPinGroup, int thresholdNum);

	
	int Maximapu12init( int iPinGroup=APU12_ALL );
	int Maximapu12set( int iPinGroup, int iMode, double iForceValue, int iVRange, int iIRange, int iConnect=APU12_PIN_TO_VI );
	int Maximapu12set( int iPinGroup, int iMode, SiteDouble sdValue, int iVRange, int iIRange, int iConnect=APU12_PIN_TO_VI);
	int Maximapu12setcapload( int iPinGroup, int iMode, double iForceValue, int iVRange, int iIRange, double risetime, int iConnect=APU12_PIN_TO_VI );
	int Maximapu12compare( int iPinGroup, double llimit, double ulimit, int numsamples, double sampledelay );
	int Maximapu12connectbanks( int iPinGroup, int low, int busA, int busB );
	int Maximapu12kelvinmode( int iPinGroup, int iMode );

namespace Maxim
{
	int Connect_APU_Pin_To_Site(PME_INT pmeAPUPin, int iSite);	//Tell the "No Site" pin that it is physically connected to this site.  Required for the Measurement and Datalog functions.
}

#endif