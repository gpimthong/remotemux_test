//DO NOT EDIT THIS FILE
/*** **** **** **** **** **** **** **** **** **** **** **** **** **** **** ****-**** **** **** **** **** **** **** **** **** **** **** **** **** **** **** ****-
*                                                                            
*	Source title:		Maximlib_SPU.h                                                                           		  
*	URL:				$URL: https://svn.maxim-ic.com/svn/ets/test_programs/AP89/AP89_FT/Trunk/MaximLib/MaximLib_SPU.h $
*   Last Modified by:	$LastChangedBy: govit.pimthong $                                       
*	Date:				$Date: 2017-03-09 12:55:55 +0700 (Thu, 09 Mar 2017) $                                                
*   Current Rev:		$Revision: 61735 $
*                                                                            
*	Description:
*		Maxim library header file for SPU
*		Maxim library written and maintained by:								 
*			Patrick Hayes (Patrick.Hayes@MaximIntegrated.com)	                 
*			Mark Bruening (Mark.Bruening@MaximIntegrated.com)                                                                            
*
*   Revision History                                                    
*                                                                            
**** **** **** **** **** **** **** **** **** **** **** **** **** **** **** ****-**** **** **** **** **** **** **** **** **** **** **** **** **** **** **** ****/
//DO NOT EDIT THIS FILE

/**********************************************************************************************************************************************For*Doxygen**//**
@file	Maximlib_SPU.h
@brief	Maxim library header file for SPU
**************************************************************************************************************************************************************/

/**********************************************************************************************************************************************For*Doxygen**//**
@page	sharingSPU Sharing SPU
# Problem #
The ETS-88 only has (https://confluence.maxim-ic.com/display/ETS88/ETS-88+Specifications> two SPU channels per sector.)
- If The test program has more than two sites, SPU channels will need to be shared across sites.
- The Pin Map Editor will not allow a single SPU channel to be assigned to more than one site

@attention New method is  found at: @ref sharingInstruments

# Solution #
Use Maxim::Connect_SPU_Pin_To_Site to enable sharing SPU channels to different sites.

The following steps will show how to share two SPU channels among four sites to make a measurement.

-# Setup the SPU __pins__ on the Pin Map Editor to be "No Site"
@image html https://confluence.maxim-ic.com/download/attachments/25103915/ETS_88_Pin_Map_SPU_No_Site_4_Sites.jpg
-# Setup a __group__ of the SPU "No Site" channels on the Pin Map Editor.
@image html https://confluence.maxim-ic.com/download/attachments/25103915/ETS_88_Pin_Map_SPU_No_Site_Group.jpg
-# Example code
@code
	//Share two SPUs among four sites
	int iSite;
	PinListData pldMeas;    //Declare a new PLD to record the measurements
	for (iSite = 0; iSite <= 1; iSite++)    //Loop only twice, since each iteration covers two sites.
	{
		//iSite = 0 means even sites (0 and 2).  iSite = 1 means odd sites (1 and 3)
		//Assume the relays below are setup to connect the proper SPU's to the proper sites.
		//electrically connect the shared SPU's to the correct site
		if (iSite == 0)
		{
			cbitclose(K200);   
			cbitclose(K201);
		}
		else
		{
			cbitopen(K200);
			cbitopen(K201);
		}

		//Tell the Datalog and Measure functions that the SPU channels are now connected to the sites.
		Maxim::Connect_SPU_Pin_To_Site(SPU_Share_6, iSite);
		Maxim::Connect_SPU_Pin_To_Site(SPU_Share_7, iSite + 2);

		//Setup the SPUs
		sp112set( SPU_Share_Group, SP_FV, 2.0 V_f, SP_10V, SP_2MA);
		lwait(100 us_f);

		//Make the measurement and combine the results with results from previously measured sites.
		//NOTE: for now, this must be done with each SPU, instead of with the group of SPUs.  This is due to the way GMEs are currently handled in the MaximLib.
		pldMeas = pldMeas & sp112mi( SPU_Share_6, SP_MV_1X, SP_MI_1X , 4 , 13.0 );   // Average over 19KHz PLC
		pldMeas = pldMeas & sp112mi( SPU_Share_7, SP_MV_1X, SP_MI_1X , 4 , 13.0 );   // Average over 19KHz PLC

		//power down the SPUs for the next loop.
		sp112set( SPU_Share_Group, SP_FV, 0.0 V_f, SP_10V, SP_2MA);
	}
	// Log the results
	Maxim::DatalogAll(DSIndex, pldMeas);        // log all sites

	//Disconnect all SPUs from the sites
	Maxim::Connect_SPU_Pin_To_Site(SPU_Share_6, NO_SITE);
	Maxim::Connect_SPU_Pin_To_Site(SPU_Share_7, NO_SITE);
@endcode
**************************************************************************************************************************************************************/


#ifndef MAXIMLIB_SPU_H
#define MAXIMLIB_SPU_H

	PinListData Maximsp112mi (int group, int vmeasgain, int imeasgain=SP_MI_1X, int numsamples=100, double sampledelay=1000);
	PinListData Maximsp112mv (int group, int vmeasgain, int imeasgain=SP_MI_1X, int numsamples=100, double sampledelay=1000);

	int Maximsp112clamp (int pos, double percent_PFSV, double percent_NFSV, double percent_PFSI, double percent_NFSI);
	int Maximsp112comp (int pos, int Loop_Resp, int FA_Resp );
	int Maximsp112filter (int pos, int vfilter, int ifilter, int acfilter);
	int Maximsp112init (int pos);
	int Maximsp112kelvinmode (int pos, int mode);
	double Maximsp112miaccum (int pos, int timeslice);
	double Maximsp112mvaccum (int pos, int timeslice);
	int Maximsp112pedestal ( int pos, int mode, double value, int gain );
	int Maximsp112set ( int pos, int mode, SiteDouble force, int vrange, int irange);
	int Maximsp112setcapload (int pos, int mode, double force, int vrange, int irange, double transition_time);

namespace Maxim
{
	int Connect_SPU_Pin_To_Site(PME_INT pmeSPUPin, int iSite);	//Tell the "No Site" pin that it is physically connected to this site.  Required for the Measurement and Datalog functions.

} // End of Maxim namespace
#endif