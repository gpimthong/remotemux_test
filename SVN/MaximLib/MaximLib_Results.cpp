//DO NOT EDIT THIS FILE
/*** **** **** **** **** **** **** **** **** **** **** **** **** **** **** ****-**** **** **** **** **** **** **** **** **** **** **** **** **** **** **** ****-
*                                                                            
*	Source title:		Maximlib_Results.CPP                                                                            		  
*	URL:				$URL: https://svn.maxim-ic.com/svn/ets/test_programs/AP89/AP89_FT/Trunk/MaximLib/MaximLib_Results.cpp $
*   Last Modified by:	$LastChangedBy: govit.pimthong $                                       
*	Date:				$Date: 2017-03-09 12:55:55 +0700 (Thu, 09 Mar 2017) $                                                
*   Current Rev:		$Revision: 61735 $
*                                                                            
*	Description:  
*		Maxim library file for Results
*		Maxim library written and maintained by:								 
*			Patrick Hayes (Patrick.Hayes@MaximIntegrated.com)	                 
*			Mark Bruening (Mark.Bruening@MaximIntegrated.com)                                                                            
*
*   Revision History
*		See Maximlib.h file.
*                                                                            
**** **** **** **** **** **** **** **** **** **** **** **** **** **** **** ****-**** **** **** **** **** **** **** **** **** **** **** **** **** **** **** ****/
//DO NOT EDIT THIS FILE

/**********************************************************************************************************************************************For*Doxygen**//**
@file	Maximlib_Results.cpp
@brief	Maxim library file for Results
**************************************************************************************************************************************************************/

#include <map>
#include <math.h>

static std::map<int,SiteDouble> mapResults;

namespace Maxim
{
	namespace Results
	{
		SiteDouble GetResults(int iTestNumber) //Returns SiteDouble of datalogged results for iTestNumber
		{
			SiteDouble sdTemp;
			if (!mapResults.count(iTestNumber))  //no existing data
			{
				//Set SiteDouble with MAX_DOUBLE and print error message
				sdTemp=DBL_MAX;
				etsprintf("Warning: GetResults call is calling unknown test number: %d",iTestNumber);
			}
			else
			{
				sdTemp=mapResults[iTestNumber];
			}

			return sdTemp;
		}
		void ClearResults() //used by library to clear Results map at end of test run 
		{
			mapResults.clear();
		}
		void SetResult(int iIndex, RESULTS_STR* rsResults) //used by library to store multi-site results for GetResults call.
		{
			
			for (int iSite =0; iSite<Maxim::GetNumSites();iSite++)
				mapResults[Maxim::Limits::GetTestNumberbyIndex(iIndex)][iSite]=rsResults[iSite].value;
		}
		void SetResult(int iIndex, double dResult, int iSite) //used by library to store single site results for GetResults call.
		{
			mapResults[Maxim::Limits::GetTestNumberbyIndex(iIndex)][iSite]=dResult;
		}
	}
}

