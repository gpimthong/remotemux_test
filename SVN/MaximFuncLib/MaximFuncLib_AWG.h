
//DO NOT EDIT THIS FILE
/*** **** **** **** **** **** **** **** **** **** **** **** **** **** **** ****-**** **** **** **** **** **** **** **** **** **** **** **** **** **** **** ****-
*                                                                            
*	Source title:		MaximFuncLib_AWG.h                                                                           		  
*	URL:				$URL: https://svn.maxim-ic.com/svn/ets/test_programs/AP89/AP89_FT/Trunk/MaximFuncLib/MaximFuncLib_AWG.h $
*   Last Modified by:	$LastChangedBy: govit.pimthong $                                       
*	Date:				$Date: 2017-03-09 12:55:55 +0700 (Thu, 09 Mar 2017) $                                                
*   Current Rev:		$Revision: 61735 $
*                                                                            
*	Description:  
*		Maxim Function library file for AWG Utilities.  
*		Maxim library written and maintained by:								 
*			Patrick Hayes (Patrick.Hayes@MaximIntegrated.com)	                 
*			Mark Bruening (Mark.Bruening@MaximIntegrated.com)                                                                           
*

*                                                                            
**** **** **** **** **** **** **** **** **** **** **** **** **** **** **** ****-**** **** **** **** **** **** **** **** **** **** **** **** **** **** **** ****/
//DO NOT EDIT THIS FILE

/**********************************************************************************************************************************************For*Doxygen**//**
@file	MaximFuncLib_AWG.h
@brief	Maxim Function library file for AWG Utilities.
**************************************************************************************************************************************************************/

namespace Maxim
{
	namespace AWG
	{
		std::vector<double> CreateLinearRampVector(double dStart, double dStop, int iSteps);
		//bool AWGExists(const LPCTSTR  AwgName, int iPin=0 );
		bool IsAWGPatternLoaded(std::string  AwgName, int iPin=0 );
		int apu12awgloader( int pin, char* name, int mode, int vrange, int irange, std::vector<double> vdPattern, AWGINFO_STR *regions=NULL );
		int sp112awgloader( int pos, char* name, int mode, int vrange, int irange, std::vector<double> vdPattern, AWGINFO_STR *regions=NULL );
	}
}
